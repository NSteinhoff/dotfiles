# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
#env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  #TERM: alacritty

#window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  #padding:
  #  x: 0
  #  y: 0

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  #title: Alacritty

  # Window class (Linux/BSD only):
  #class:
    # Application instance name
    #instance: Alacritty
    # General application class
    #general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

#scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  #history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

# Font configuration
#font:
  # Normal (roman) font face
  #normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Regular

  # Bold font face
  #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold

  # Italic font face
  #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

  # Bold italic font face
  #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

  # Point size
  #size: 11.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  #offset:
  #  x: 0
  #  y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false

# Colors (Tomorrow Night Bright)
#colors:
  # Default colors
  #primary:
  #  background: '#000000'
  #  foreground: '#eaeaea'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #dim_foreground: '#9a9a9a'
    #bright_foreground: '#ffffff'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are unset,
  # the cursor color will be the inverse of the cell color.
  #cursor:
  #  text: '#000000'
  #  cursor: '#ffffff'

  # Selection colors
  #
  # Colors which should be used to draw the selection area. If selection
  # background is unset, selection color will be the inverse of the cell colors.
  # If only text is unset the cell text color will remain the same.
  #selection:
  #  text: '#eaeaea'
  #  background: '#404040'

  # Normal colors
  #normal:
  #  black:   '#000000'
  #  red:     '#d54e53'
  #  green:   '#b9ca4a'
  #  yellow:  '#e6c547'
  #  blue:    '#7aa6da'
  #  magenta: '#c397d8'
  #  cyan:    '#70c0ba'
  #  white:   '#eaeaea'

  # Bright colors
  #bright:
  #  black:   '#666666'
  #  red:     '#ff3334'
  #  green:   '#9ec400'
  #  yellow:  '#e7c547'
  #  blue:    '#7aa6da'
  #  magenta: '#b77ee0'
  #  cyan:    '#54ced6'
  #  white:   '#ffffff'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '#000000'
  #  red:     '#8c3336'
  #  green:   '#7a8530'
  #  yellow:  '#97822e'
  #  blue:    '#506d8f'
  #  magenta: '#80638e'
  #  cyan:    '#497e7a'
  #  white:   '#9a9a9a'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '#ff00ff' }`
  #
  #indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
#background_opacity: 1.0

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
#key_bindings:
  # (Windows, Linux, and BSD only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: M,      mods: Command,         action: Minimize         }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  #- { key: Paste,                    action: Paste                            }
  #- { key: Copy,                     action: Copy                             }
  #- { key: L,         mods: Control, action: ClearLogNotice                   }
  #- { key: L,         mods: Control, chars: "\x0c"                            }
  #- { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  #- { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  #- { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  #- { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

window:
  decorations: none
  startup_mode: Maximized
  padding:
    x: 2
    y: 2

key_bindings:
  - { key: U,   mods: Alt|Shift,   action: ScrollPageUp,     mode: ~Alt }
  - { key: D,   mods: Alt|Shift,   action: ScrollPageDown,   mode: ~Alt }
  - { key: K,   mods: Alt|Shift,   action: ScrollLineUp,     mode: ~Alt }
  - { key: J,   mods: Alt|Shift,   action: ScrollLineDown,   mode: ~Alt }
  - { key: G,   mods: Alt|Shift,   action: ScrollToBottom,   mode: ~Alt }

fonts:
  iosevka: &iosevka
    normal:
      family: Iosevka Term
      style: Regular
    bold:
      family: Iosevka Term
      style: Bold
    italic:
      family: Iosevka Term
      style: Italic
    size: 16
    offset:
      x: 0
      y: 0
    glyph_offset:
      x: 0
      y: 0
    use_thin_strokes: true

font: *iosevka

colorschemes:
  argonaut: &argonaut
    primary:
      background: '0x292C3E'
      foreground: '0xEBEBEB'

    cursor:
      text:     '0x292C3E'
      cursor:   '0xEBEBEB'

    normal:
      black:   '0x0d0d0d'
      red:     '0xFF301B'
      green:   '0xA0E521'
      yellow:  '0xFFC620'
      blue:    '0x1BA6FA'
      magenta: '0x8763B8'
      cyan:    '0x21DEEF'
      white:   '0xEBEBEB'

    bright:
      black:   '0x6D7070'
      red:     '0xFF4352'
      green:   '0xB8E466'
      yellow:  '0xFFD750'
      blue:    '0x1BA6FA'
      magenta: '0xA578EA'
      cyan:    '0x73FBF1'
      white:   '0xFEFEF8'

  breeze: &breeze
    primary:
      background: '0x232627'
      foreground: '0xfcfcfc'

      dim_foreground: '0xeff0f1'
      bright_foreground: '0xffffff'
      dim_background: '0x31363b'
      bright_background: '0x000000'

    cursor:
      text: '0x232627'
      cursor: '0xfcfcfc'

    normal:
      black: '0x232627'
      red: '0xed1515'
      green: '0x11d116'
      yellow: '0xf67400'
      blue: '0x1d99f3'
      magenta: '0x9b59b6'
      cyan: '0x1abc9c'
      white: '0xfcfcfc'

    bright:
      black: '0x7f8c8d'
      red: '0xc0392b'
      green: '0x1cdc9a'
      yellow: '0xfdbc4b'
      blue: '0x3daee9'
      magenta: '0x8e44ad'
      cyan: '0x16a085'
      white: '0xffffff'

    dim:
      black: '0x31363b'
      red: '0x783228'
      green: '0x17a262'
      yellow: '0xb65619'
      blue: '0x1b668f'
      magenta: '0x614a73'
      cyan: '0x186c60'
      white: '0x63686d'

  dracula: &dracula
    primary:
      background: '0x282a36'
      foreground: '0xf8f8f2'

    cursor:
      text: '0x282a36'
      cursor: '0xf8f8f2'

    normal:
      black:   '0x000000'
      red:     '0xff5555'
      green:   '0x50fa7b'
      yellow:  '0xf1fa8c'
      blue:    '0xcaa9fa'
      magenta: '0xff79c6'
      cyan:    '0x8be9fd'
      white:   '0xbfbfbf'

    bright:
      black:   '0x575b70'
      red:     '0xff6e67'
      green:   '0x5af78e'
      yellow:  '0xf4f99d'
      blue:    '0xcaa9fa'
      magenta: '0xff92d0'
      cyan:    '0x9aedfe'
      white:   '0xe6e6e6'

  gruvbox-light: &gruvbox-light
    primary:
      background: '0xfbf1c7'
      foreground: '0x3c3836'

    cursor:
      text: '0xfbf1c7'
      cursor: '0x3c3836'

    normal:
      black:   '0xfbf1c7'
      red:     '0xcc241d'
      green:   '0x98971a'
      yellow:  '0xd79921'
      blue:    '0x458588'
      magenta: '0xb16286'
      cyan:    '0x689d6a'
      white:   '0x7c6f64'

    bright:
      black:   '0x928374'
      red:     '0x9d0006'
      green:   '0x79740e'
      yellow:  '0xb57614'
      blue:    '0x076678'
      magenta: '0x8f3f71'
      cyan:    '0x427b58'
      white:   '0x3c3836'

  gruvbox-dark: &gruvbox-dark
    primary:
      background: '0x282828'
      foreground: '0xebdbb2'

    cursor:
      text: '0x282828'
      cursor: '0xebdbb2'

    normal:
      black:   '0x282828'
      red:     '0xcc241d'
      green:   '0x98971a'
      yellow:  '0xd79921'
      blue:    '0x458588'
      magenta: '0xb16286'
      cyan:    '0x689d6a'
      white:   '0xa89984'

    bright:
      black:   '0x928374'
      red:     '0xfb4934'
      green:   '0xb8bb26'
      yellow:  '0xfabd2f'
      blue:    '0x83a598'
      magenta: '0xd3869b'
      cyan:    '0x8ec07c'
      white:   '0xebdbb2'

  iterm2: &iterm2
    primary:
      background: '0x101421'
      foreground: '0xfffbf6'

    cursor:
      text: '0x101421'
      cursor: '0xfffbf6'

    normal:
      black:   '0x2e2e2e'
      red:     '0xeb4129'
      green:   '0xabe047'
      yellow:  '0xf6c744'
      blue:    '0x47a0f3'
      magenta: '0x7b5cb0'
      cyan:    '0x64dbed'
      white:   '0xe5e9f0'

    bright:
      black:   '0x565656'
      red:     '0xec5357'
      green:   '0xc0e17d'
      yellow:  '0xf9da6a'
      blue:    '0x49a4f8'
      magenta: '0xa47de9'
      cyan:    '0x99faf2'
      white:   '0xffffff'

  molokai: &molokai
    primary:
      background: '0x1B1D1E'
      foreground: '0xF8F8F2'

    cursor:
      text: '0x1B1D1E'
      cursor: '0xF8F8F2'

    normal:
      black:   '0x333333'
      red:     '0xC4265E'
      green:   '0x86B42B'
      yellow:  '0xB3B42B'
      blue:    '0x6A7EC8'
      magenta: '0x8C6BC8'
      cyan:    '0x56ADBC'
      white:   '0xE3E3DD'
    bright:
      black:   '0x666666'
      red:     '0xF92672'
      green:   '0xA6E22E'
      yellow:  '0xE2E22E'
      blue:    '0x819AFF'
      magenta: '0xAE81FF'
      cyan:    '0x66D9EF'
      white:   '0xF8F8F2'

  nord: &nord
     primary:
       background: '0x2E3440'
       foreground: '0xD8DEE9'

     cursor:
       text: '0x2E3440'
       cursor: '0xD8DEE9'

     normal:
       black:   '0x3B4252'
       red:     '0xBF616A'
       green:   '0xA3BE8C'
       yellow:  '0xEBCB8B'
       blue:    '0x81A1C1'
       magenta: '0xB48EAD'
       cyan:    '0x88C0D0'
       white:   '0xE5E9F0'

     bright:
       black:   '0x4C566A'
       red:     '0xBF616A'
       green:   '0xA3BE8C'
       yellow:  '0xEBCB8B'
       blue:    '0x81A1C1'
       magenta: '0xB48EAD'
       cyan:    '0x8FBCBB'
       white:   '0xECEFF4'

  nova: &nova
    primary:
      background: '0x3C4C55'
      foreground: '0xC5D4DD'

    cursor:
      text: '0x212121'
      cursor: '0xC0C5CE'

    normal:
      black:   '0x3C4C55'
      red:     '0xDF8C8C'
      green:   '0xA8CE93'
      yellow:  '0xDADA93'
      blue:    '0x83AFE5'
      magenta: '0x9A93E1'
      cyan:    '0x7FC1CA'
      white:   '0xC5D4DD'

    bright:
      black:   '0x899BA6'
      red:     '0xF2C38F'
      green:   '0xA8CE93'
      yellow:  '0xDADA93'
      blue:    '0x83AFE5'
      magenta: '0xD18EC2'
      cyan:    '0x7FC1CA'
      white:   '0xE6EEF3'

  snazzy: &snazzy
    primary:
      background: '0x282a36'
      foreground: '0xeff0eb'

    cursor:
      text: '0x282a36'
      cursor: '0xeff0eb'

    normal:
      black:   '0x282a36'
      red:     '0xff5c57'
      green:   '0x5af78e'
      yellow:  '0xf3f99d'
      blue:    '0x57c7ff'
      magenta: '0xff6ac1'
      cyan:    '0x9aedfe'
      white:   '0xf1f1f0'

    bright:
      black:   '0x686868'
      red:     '0xff5c57'
      green:   '0x5af78e'
      yellow:  '0xf3f99d'
      blue:    '0x57c7ff'
      magenta: '0xff6ac1'
      cyan:    '0x9aedfe'
      white:   '0xf1f1f0'

  taerminal: &taerminal
    primary:
      background: '0x26282a'
      foreground: '0xf0f0f0'

    cursor:
      text:   '0x26282a'
      cursor:     '0xf0f0f0'

    normal:
      black:   '0x26282a'
      red:     '0xff8878'
      green:   '0xb4fb73'
      yellow:  '0xfffcb7'
      blue:    '0x8bbce5'
      magenta: '0xffb2fe'
      cyan:    '0xa2e1f8'
      white:   '0xf1f1f1'

    bright:
      black:   '0x6f6f6f'
      red:     '0xfe978b'
      green:   '0xd6fcba'
      yellow:  '0xfffed5'
      blue:    '0xc2e3ff'
      magenta: '0xffc6ff'
      cyan:    '0xc0e9f8'
      white:   '0xffffff'

  xterm: &xterm
    primary:
      background: '0x000000'
      foreground: '0xffffff'

    cursor:
      text: '0x000000'
      cursor: '0xffffff'

    normal:
      black:   '0x000000'
      red:     '0xcd0000'
      green:   '0x00cd00'
      yellow:  '0xcdcd00'
      blue:    '0x0000ee'
      magenta: '0xcd00cd'
      cyan:    '0x00cdcd'
      white:   '0xe5e5e5'

    bright:
      black:   '0x7f7f7f'
      red:     '0xff0000'
      green:   '0x00ff00'
      yellow:  '0xffff00'
      blue:    '0x5c5cff'
      magenta: '0xff00ff'
      cyan:    '0x00ffff'
      white:   '0xffffff'

colors: *taerminal
