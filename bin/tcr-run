#!/bin/bash
if [ $# -gt 1 ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    cat <<END
usage: test-and-commit-or-revert [command]

Runs tests and commits the change when the tests pass.
Otherwise reverts to the last passing state.

    command         Test command.
                    default: "make test"

    -h, --help      Show this help.
END
    exit 0
fi

# Parse args
test_cmd="${1:-make test}"

echo_diff () {
    line=$1
    if [[ $line == +* ]]; then
        tput setaf 2
    elif [[ $line == -* ]]; then
        tput setaf 1
    else
        tput sgr0
    fi
    echo "   $line"
    tput sgr0
}

check_changes () {
    DIFF="$(git diff --no-color)"
    if [ "$DIFF" = "" ]; then
        echo No changes!
        exit 0
    fi

    echo "Changes to be tested:"
    echo -e "\n>>>>>"
    echo "$DIFF" | while read line; do echo_diff "$line"; done
    tput sgr0
    echo -e "<<<<<\n"
}

confirm () {
    echo -e "Testing: $test_cmd\n---"
    read -p "Continue (y/n)? " CONFIRM

    if [ $CONFIRM = "n" ]; then
        echo "OK then."
        exit 0
    fi
}

run_tcr () {
    # Assemble the command string
    test="$test_cmd"
    commit="(git commit -am 'passing' || true)"  # ignore exit code when nothing to commit
    revert="git reset --hard"
    touch="(git ls-files | xargs touch)"         # touch the files to make vim 'autoread' work
    full_cmd="($test && $commit) || ($revert && $touch)"

    sh -c "$full_cmd"
}

check_changes
confirm
run_tcr
