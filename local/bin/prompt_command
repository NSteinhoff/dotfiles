# vim: ft=sh

LAST=$(fc -ln -1 | xargs)

# Colors
NC='\033[0m' # No Color
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'

RE_CD='cd.*'
RE_DEV="$HOME/dev"
RE_HOME="$HOME"

TASK_LIST="$HOME/tasks.md"

post_cd() {
    case $PWD in
        $RE_HOME) post_cd_home;;
        $RE_DEV) post_cd_dev;;
    esac
    [[ -d '.git' ]] && post_cd_repo
}

post_cd_dev() {
    repos=$(find . -maxdepth 2 -path '*/.git')
    for repo in $repos; do
        r=${repo%/.git}
        r=${r#./}
        pushd $r > /dev/null
        branch_name=$(git rev-parse --abbrev-ref HEAD)
        last_commit=$(git log -n 1 --pretty=format:'%an %ar')
        echo "$(printf %-30s $r) [$branch_name] $last_commit"
        [[ -n $(git status --short) ]] && git status --short
        popd > /dev/null
    done
}

post_cd_repo() {
    git log -n 1
    [[ -n $(git status --short) ]] && echo && git status --short
    [[ -n $(git diff) ]] && echo && git diff --stat
}

post_cd_home() {
    [[ -f "$TASK_LIST" ]] && list_tasks

    repos=$(find . -maxdepth 3 -path '*/.git')
    [[ -n "$repos" ]] && echo "Recent Activity:"
    for repo in $repos; do
        r=${repo%/.git}
        r=${r#./}
        pushd $r > /dev/null

        if [[ -n $(git log --since="two weeks ago") ]]; then
            author=$(git log -n 1 --pretty=format:'%an')
            if [[ "$author" == "Niko Steinhoff" ]]; then
                last_commit=$(git log -n 1 --pretty=format:'%ar')
                echo "$(printf %-30s $r) $last_commit"
                [[ -n $(git status --short) ]] && git status --short
            fi
        fi

        popd > /dev/null
    done
}

list_tasks() {
    tasks=$(grep -e '^\[ \] .*' "$TASK_LIST")
    notes=$(grep -e '^!!  .*' "$TASK_LIST")

    if [[ -n "$tasks" ]] || [[ -n "$notes" ]]; then
        echo "Tasks and Notes:"

        if [[ -n "$tasks" ]]; then
            echo -en "$RED"
            echo -e "$tasks"
            echo -en "$NC"
        fi

        if [[ -n "$notes" ]]; then
            echo -en "$ORANGE"
            echo -e "$notes"
            echo -en "$NC"
        fi
        echo
    fi
}

[[ $LAST =~ $RE_CD ]] && post_cd
