#!/bin/bash
############################
# install
#
# Install dotfiles and other configurations files.
# Check if certain basic tools are installed, and install them if they aren't.
#
############################

installp() {
    local answer
    local prompt="Do you wish to install '$@'? Y(es)/N(o)"
    echo ""
    while [[ ! $answer =~ Y(es)?|No? ]]; do
        read -p "$prompt" answer
    done
    case $answer in
        Y*) echo Yes; true;;
        N*) echo No; false;;
    esac
}


# -----------------------------------------------------------------------------
#  SETUP
# -----------------------------------------------------------------------------
# {{{
dir="$HOME/dotfiles"
bkpdir="$HOME/.dotfiles_bkp"
lbin="$HOME/.local/bin"
[ -d "$lbin" ] || mkdir -p "$lbin"

case "$OSTYPE" in
    linux*) os="linux";;
    darwin*) os="mac";;
esac

# Install the dotfiles passed as arguments
#
# Move any existing dotfiles in homedir to dotfiles_old directory,
# then create symlinks from the homedir to any files in the
# ~/dotfiles directory specified in $files
install_dotfiles () {
    files="$@"
    echo -e "\n\n"
    echo ">>>>>>>>>>>>>>>"
    echo "Installing dotfiles: ${files[@]}"
    for file in ${files[@]}; do
        target="$dir/$file"
        if [ ! -f "$target" ] && [ ! -d "$target" ]; then
            echo "WARNING: File '$target' does not exist. Skipping."
            continue
        fi
        linkname="$HOME/.$file"
        linkdir="${linkname%/*}"
        echo "$file:"
        if [ -L "$linkname" ]; then
            echo -e "\tRemoving old symlink."
            rm "$linkname"
        fi
        if [ -f "$linkname" ] || [ -d "$linkname" ]; then
            echo -e "\tBacking-up existing file."
            mkdir -p "$bkpdir/${file%/*}"
            mv -v "$linkname" "$bkpdir/$file"
        fi
        [ -d "$linkdir" ] || mkdir -p "$linkdir"
        echo -e "\tCreating symlink: $(ln -v -s $target $linkname)"
    done
}

# }}}


# -----------------------------------------------------------------------------
#  BIN
# -----------------------------------------------------------------------------
install_dotfiles local/bin/prompt_command


# -----------------------------------------------------------------------------
#  SHELL & TERMINAL
# -----------------------------------------------------------------------------
# {{{

# BASH
# ====
install_dotfiles bash_aliases inputrc
[ $os = "mac" ] && install_dotfiles bash_profile bashrc

# TMUX
# ====
install_dotfiles tmux.conf

# ALACRITTY
# =========
install_dotfiles config/alacritty/alacritty.yml

# }}}


# -----------------------------------------------------------------------------
# VSCode
# -----------------------------------------------------------------------------
# {{{
install_dotfiles config/Code/User/settings.json

# }}}


# -----------------------------------------------------------------------------
#  GIT
# -----------------------------------------------------------------------------
# {{{
install_dotfiles \
    git_template \
    gitconfig \
    gitignore

# }}}

# -----------------------------------------------------------------------------
#  VIM
# -----------------------------------------------------------------------------
# {{{
install_dotfiles \
    vim \
    vimrc \
    gvimrc \
    config/nvim

# }}}


# -----------------------------------------------------------------------------
#  CTAGS
# -----------------------------------------------------------------------------
# {{{
install_dotfiles \
    ctags \
    ctags.d

# }}}


# -----------------------------------------------------------------------------
#  FONTS
# -----------------------------------------------------------------------------
# {{{
install_dotfiles \
    local/share/fonts/iosevka \
    local/share/fonts/InputMono \
    local/share/fonts/Monoid

# }}}


# -----------------------------------------------------------------------------
# LINUX / UBUNTU
# -----------------------------------------------------------------------------
# {{{
if [ $os = "linux" ]; then
    installp "System packages" && sudo apt install $(cat $dir/packages)
fi

# }}}


# -----------------------------------------------------------------------------
#  CRAWL
# -----------------------------------------------------------------------------
# {{{
if [ $os = "linux" ]; then
    install_dotfiles crawlrc

    crawl="$HOME/.crawl"
    [ -d "$crawl" ] || mkdir "$crawl"
    if [ ! -f "$crawl/icon.png" ]; then
        echo "  Installing Crawl icon"
        ln -s "$HOME/dotfiles/crawl/stone_soup_icon-512x512.png" "$crawl/icon.png"
    fi
    if [ ! -f /usr/share/applications/crawl-online.desktop ]; then
        echo "  Installing desktop app for Crawl Online"
        sudo cp "$HOME/dotfiles/crawl/crawl-online.desktop" "/usr/share/applications/crawl-online.desktop"
    fi
    if [ ! -f /usr/share/applications/crawl-trunk.desktop ] && [ -x /usr/local/bin/crawl ]; then
        echo "  Installing desktop app for Crawl Trunk"
        sudo cp "$HOME/dotfiles/crawl/crawl-trunk.desktop" "/usr/share/applications/crawl-trunk.desktop"
    fi
    if [ ! -f "$crawl"/cao_key ]; then
        echo "  Downloading Crawl CAO Key for online play"
        curl https://crawl.develz.org/cao_key 2>/dev/null > "$crawl/cao_key" && chmod 600 "$crawl/cao_key"
    fi
fi

# }}}


# vim:foldmethod=marker textwidth=0
