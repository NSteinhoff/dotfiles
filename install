#!/bin/bash
############################
# install
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles
############################
dir="$HOME/dotfiles"
lbin="$HOME/.local/bin"
[ -d "$lbin" ] || mkdir -p "$lbin"

case "$OSTYPE" in
    linux*) os="linux";;
    darwin*) os="mac";;
esac

########## Installing system packages
echo -e "\n\n"
echo ">>>>>>>>>>>>>>>"
echo "Installing system packages..."

[ $os = "linux" ] && sudo apt install $(cat $dir/extras/packages)


##### Installing Python
install_python () {
    echo -e "\n\n"
    echo ">>>>>>>>>>>>>>>"
    echo "Installing python..."

    $dir/extras/python
}
# install_python


########## ZSH
install_zsh() {
    echo "Making Zsh default shell"
    sudo chsh -s `which zsh`
    echo "Installing oh-my-zsh"
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
}
# install_zsh


########## Dotfiles in HOME
echo -e "\n\n"
echo ">>>>>>>>>>>>>>>"
echo "Installing dotfiles..."
bkpdir="$HOME/.dotfiles_bkp"
files=(\
    bash_aliases \
    cider.edn \
    config/alacritty/alacritty.yml \
    config/nvim \
    config/sxhkd/sxhkdrc \
    clojure/deps.edn \
    crawlrc \
    ctags \
    ctags.d \
    git_template \
    gitconfig \
    gitignore \
    inputrc \
    scalafmt.conf \
    screenrc \
    tmux.conf \
    vim \
    vimrc \
    gvimrc \
    zshrc \
    local/share/fonts/iosevka \
    local/share/fonts/InputMono \
    local/share/fonts/Monoid \
    sbt/1.0/plugins/build.sbt \
    stack/config.yaml \
)
[ $os = "mac" ] && files+=(bash_profile bashrc)


# move any existing dotfiles in homedir to dotfiles_old directory,
# then create symlinks from the homedir to any files in the
# ~/dotfiles directory specified in $files
for file in ${files[*]}; do
    target="$dir/$file"
    linkname="$HOME/.$file"
    linkdir="${linkname%/*}"
    echo "$file:"
    if [ -L "$linkname" ]; then
        echo -e "\tRemoving old symlink."
        rm "$linkname"
    fi
    if [ -f "$linkname" ] || [ -d "$linkname" ]; then
        echo -e "\tBacking-up existing file."
        mkdir -p "$bkpdir/${file%/*}"
        mv -v "$linkname" "$bkpdir/$file"
    fi
    [ -d "$linkdir" ] || mkdir -p "$linkdir"
    echo -e "\tCreating symlink: $(ln -v -s $target $linkname)"
done

# Init and update the plugins tracked as submodules
pushd "$dir"
git submodule update --init --recursive
popd

### Download git prompt script
# curl -XGET "https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh" > ~/.git-prompt.sh

# -----------------------------------------------------------------------------
#  Crawl
# -----------------------------------------------------------------------------
crawl="$HOME/.crawl"
[ -d "$crawl" ] || mkdir "$crawl"
[ -f "$crawl/icon.png" ] || ln -s "$HOME/dotfiles/crawl/stone_soup_icon-512x512.png" "$crawl/icon.png"
[ $os = "linux" ] && ( [ -f /usr/share/applications/crawl-online.desktop ] || sudo cp "$HOME/dotfiles/crawl/crawl-online.desktop" "/usr/share/applications/crawl-online.desktop" )
