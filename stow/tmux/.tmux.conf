# --------------------------------- General -----------------------------------
# {{{
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm*:Tc"

set-option -g history-limit 50000

set-option -g base-index 1
set-option -gs escape-time 10
set-option -gw pane-base-index 1
set-option -gw aggressive-resize off

# Enable vi bindings in 'copy' mode
set-window-option -g mode-keys vi

# MacOSX clipboard support
if-shell '[[ $OSTYPE == darwin* ]]' {
    set-option -g default-shell /usr/local/bin/bash
    set-option -g default-command "reattach-to-user-namespace -l $SHELL"
}
# }}}

# ------------------------------- Keybindings ---------------------------------
# {{{
set-option -g prefix C-s
bind-key C-s send-prefix
unbind-key C-b

# Switch to last window (like last buffer in vim)
bind-key C-6 last-window
bind-key C-^ last-window

# Allow next window with both n or C-n following the prefix
bind-key n next-window
bind-key C-n next-window

# Easier layout switching
bind-key C-Space next-layout

# Attach with current directory as working directory
bind-key A attach -c '#{pane_current_path}'

# Reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded."

# hjkl pane traversal
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

# Vim-like bindings
bind-key T break-pane
bind-key v split-window -h

# TABLE 'copy-mode-vi':
# {{{
bind-key -T copy-mode-vi u send-keys -X halfpage-up
bind-key -T copy-mode-vi d send-keys -X halfpage-down
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# }}}

# TABLE '!': Execute
bind-key ! switch-client -T execute
bind-key -T execute ! command-prompt -p '!' { split-window -h -d '%%' }
bind-key -T execute ? command-prompt -p 'man' { split-window -h 'man %%' }
bind-key -T execute : command-prompt -p '$' { split-window -h '%%' }

# TABLE 'y': Toggle options
# {{{
bind-key y switch-client -T toggle
bind-key -T toggle o switch-client -T toggle-option

bind-key -T toggle-option _ set-option status
# }}}
# }}}

# -------------------------------- Statusline ---------------------------------
# {{{
set-option -g status on
set-option -g status-position bottom
set-option -g status-style dim
set-option -g status-left '#[bold][#S] '
set-option -g status-right ' %b %d | %H:%M '
# }}}

# vim: foldmethod=marker
